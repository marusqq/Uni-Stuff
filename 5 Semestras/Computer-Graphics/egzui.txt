##
Klausimai siek tiek koreguosis, tai kazkur padarys iskabele. O daugiau tai kazkas tokio ir bus kaip preitais metais.
##

1)Šviesos
	Direction Light vs Point Light

2)Medžiagos:
	(sudetingeja -> ir kiekvienam reikia vis daugiau svorio)
	Basic -> Normal -> Lambert(difusinis) -> Fong

	klausimo pvz:
	ar Lamberto tipo medziaga reaguos i kameros pasukima 
		-> nereaguoja i kamera (kazkokia formule is 3 vektoriu)


3) Normales

4) Geometriniai primityvai:

	4.1:
	cilindras -> kūgis???
	aprašyme ir top radius ir bottom radius (todel galima su padaryt nupjautini kugi)

	4.2:
	standartiniai briunainiai, pavaizduoti sferai galima su ikosoedru?
	[[threejs.org] galima rast pavyzdziu]]

	klausimo pvz:
		kiek turi trikampiu kosoedras jei detail +1?
			->kiekvienas trikampis verciasi i 4 mazesnius uz kiekviena +1

5) Sudetinga geometrija:
	binariniu operaciju NEBUS EGZAMINE tikrai
	
	[svarbu zinoti]:
		Convex! Lathe! Extrude!

6) Textures
	u v koordinates
	
	klausimo pvz: 
	teksturos koordinates, kubas, norim ant kubo uzdeti tekstura ir klausimas: kokioks teksturos xy?
		-> ats

7) Camera
	camera.up()!
	camera.lookAt()!
	
	klausimo pvz:
	
	bus kazkokia realistine situacija ir bus nusakyta kur ta kamera yra ir reiks irasyti argumenta kur ziuret(to daikto xy)
	
	'juda lektuvas, ant lektuvo yra kamera, pasakyta kur lektuvas' ir reikia tuscias kodo vietas uzpildyt:
		-> ats

7) Cameros reguliacijos
	[svarbu zinoti]:
		orthographicCamera!
		perspectiveCamera!
	
	klausimo pvz:
		kazkas su kameros reguliavimu, norim specifinio vaizdo ekrane, reikia pareguliuot kameros kampa. 
			-> ten kazkaip pagal pirma argumenta?? (not sure)
		

8) grafinis konvejeris (PROGRAMUOTAS NAUDOJANT SHADERIUS GLSL.1 tema (SENIAU BUVO FIKSUOTAS (IDETAS I HARDWARE), poto atsidaro galimybe programuoti ir tapo fiksuotu funkciuonalumu)
	[svarbu zinoti]: (t.y. kaip veikia tas)
		pasiekiam kas vyksta su virsunemis
		
	klausimo pvz:
		yra uv koordinates, tai jei padarau transformacija, pasuku objecta, atleku transformacijas su virsunem, ar uv koordinates pasikeicia? ar jas reikia perskaiciuoti?
			->realiai su uv koordinatemis nieko nevyksta, o kada gali atsitikt kai tekstura transformuojate.

	klausimo pvz: 
		yra fiktura tekstura (sachmatine) ant kazkokio objecto, as matau koda yra uv koordinates. ka reikia padaryt su uv koordinatem kad pas mus butu 4 kartus daugiau langeliu?
		ar reikia padidinti uv du kartus ar sumazinti?

	arba reikia pasukti 45 kampu tekstura, bet reikia transformacijos


	bet siaip tai labiausiai svarbu kas vyksta su virsunemis
-------------------------------------------------WEB GL PART OVER

------------------------------------------------GLSL PART START
1)GLSL kalbos elementai

2)seseliai su three.shaderMaterial()
	kodo frakmentas

3)fiksuotas funkciuonalumas
	is cia 100% bus klausimas!!!!!!
	(difusinis, phong, blinn-phong)

destytojas buvo ivedes kintamuosiu phongo atveju, tai tuose pavyzdziuose nenaudojami (paslifuos koda sake ir galbut prides komentaru kad lengviau suprast butu)

klausimai:
	1) duotos 3 eilutes: 'istrauka is difusinio ar phong. is kurio?' 
	2) parasytas phongo pavyzdys, paprastai pervadintas viskas ir poto klausimas, kas yra v1, v2, v3
		atsakmyas: v1 -> trimatis vektorius = 0 balu
		reikia sakyt ten sviesos ar kazko kito

4)procedurines teksturos:
kas dare 4 uzduoti, tie turetu zinot kazkiek

5)aplinkos zemelapis
PAVYZDZIU LYGYJE
gal sudes i viena atskira klausimuka, kad suprast kas yra aplinkos zemelapis ir normaliu zemelapis

++literatura

2 pvz:



